# Завдання 1
# Практика імпорту
# Створити каталог з 2 модулів; внести в одну з них функцію; потім 
# імпортуйте цю функцію в інший модуль і використовуйте її у сценарії за 
# вибором.
from file_function import sum_num
num_1=384756
num_2=28347
x=sum_num(num_1,num_2)
print(x)

# Завдання 2
# Модуль sys.
# Список “sys.path” ініціалізується зі змінної середовища PYTHONPATH. 
# Чи можна змінити це з Python? Якщо так, чи впливає це на те, де Python
# шукає файли модулів? Виконайте кілька інтерактивних тестів, щоб дізнатися це.


# Завдання 3
# Основи, імпорт, робота з модулем os
# Напишіть програму, яка підраховує рядки та символи у файлі 
# (схожа на `wc` Unix-utility, щоб отримати додаткову інформацію про неї, 
# перейдіть за посиланням:
# https://www.geeksforgeeks.org/wc-command-linux-examples/ або в якщо у вас
# macOS або Linux - просто викличте посібник для цієї утиліти за допомогою
# команди: `man wc`).
# Створіть модуль Python під назвою "mymod.py", який має три функції:

# Функція count_lines(name), яка читає вхідний файл і підраховує кількість
# рядків у ньому (підказка: file.readlines() виконує більшу частину роботи 
# за вас, а "len" робить решту) 


# функція count_chars(name), яка читає вхідний файл і підраховує кількість
# символів у ньому (підказка: file.read() повертає один рядок)


# функція test(name), яка викликає обидві функції підрахунку з заданою назвою
# вхідного файлу. Таке ім’я файлу зазвичай може бути переданим, жорстко 
# закодованим, введеним за допомогою input() або отриманим із командного
# рядка через список sys.argv; поки що припустимо, що це переданий аргумент
# функції.
# Усі три функції `mymod.py` повинні очікувати передачі рядка імені файлу. 

# Перевірте свій модуль в інтерактивному режимі, використовуючи імпорт і 
# кваліфікацію імен для отримання експорту. 

# Чи повинен ваш PYTHONPATH містити каталог, де ви створили mymod.py?

# Спробуйте запустити свій модуль на собі: наприклад, test("mymod.py"). 
# Зверніть увагу, що тест відкриває файл двічі; якщо ви відчуваєте амбітність,
# ви можете покращити це, передавши відкритий файловий об’єкт у дві функції
# підрахунку (підказка: file.seek(0) — це перемотування файлу назад).